#!/bin/bash

# abort if not in git directory
if ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "Aborting. Not in a git repository."
  exit 1
fi

branch="$(git rev-parse --abbrev-ref HEAD)"
fallback="root" # branch to transition to

# prevent destruction of uncommitted data
if [ "$1" != "--force" ] && [ -z "$(git st | grep 'nothing to commit')" ]; then
  echo "Aborting deletion of branch '$branch'... uncommitted data."
  exit 1
fi

if [ $branch != 'master' ] && [ $branch != 'staging' ] && [ $branch != 'production' ]; then
  # remove branch from origin
  if [ "$(git branch --remote | grep origin/$branch)" ]; then
    echo "Deleting $branch from origin..."
    git push origin :$branch
  fi

  # remove branch from upstream
  if [ "$(git branch --remote | grep upstream/$branch)" ]; then
    echo "Deleting $branch from upstream..."
    git push upstream :$branch
  fi
fi

# check out fallback branch
if [ $branch != $fallback ]; then

  # deletion should occur if:
  #   * --force is set (handled below)
  #   * the branch exists locally
  #   * the branch exists remotely
  deletion="$(git branch --contains $branch | sed /$fallback/d | sed /$branch/d)"
  deletion+="$(git branch --remote --contains $branch)"

  # if fallback branch already exists:
  #   * check it out
  #   * reset fallback branch to ancestor if:
  #     * fallback branch is contained locally
  #     * fallback branch is contained remotely
  #   * destroy local branch
  # otherwise:
  #   * create the fallback branch
  #   * reset fallback branch to ancestor
  #   * destroy local branch
  if [ "$(git branch | grep $fallback)" ]; then
    git checkout $fallback

    # if fallback branch is contained locally
    if [ "$(git branch --contains $fallback | sed /$fallback/d | sed /$branch/d)" ]; then
      git reset --hard $(git ancestor)
    fi

    # if fallback branch is contained remotely
    if [ "$(git branch --remote --contains $fallback | sed /$fallback/d)" ]; then
      git reset --hard $(git ancestor)
    fi

    if [ "$1" == "--force" ] || [ "$deletion" ]; then
      git branch -D $branch
    fi
  else
    git checkout -b $fallback
    git reset --hard $(git ancestor)
    if [ "$1" == "--force" ] || [ "$deletion" ]; then
      git branch -D $branch
    fi
  fi
fi

