#!/usr/bin/ruby
# frozen_string_literal: true

#
# Usage: git semver [major / minor / patch]
#
# Generates a new git tag based off of the latest tag
#
tag = `git describe --abbrev=0 --tags 2>/dev/null`.strip
unless /^(v)?\d+\.\d+\.\d+$/.match?(tag)
  puts 'Sorry, no pre-existing semver tags.'
  exit 1
end

versions = tag.scan(/\d+/)

prefix = 'v' if tag[0] == 'v'
major = versions[0].to_i
minor = versions[1].to_i
patch = versions[2].to_i

updated = -> { "#{prefix}#{major}.#{minor}.#{patch}" }

case ARGV[0]
when 'major'
  major += 1
  minor = 0
  patch = 0
when 'minor'
  minor += 1
  patch = 0
when 'patch'
  patch += 1
end

if updated.call != tag
  puts "Updating from #{tag} to #{updated.call}"
  `git tag -a #{updated.call} -m ''`
else
  puts "Current version is #{tag}"
end
